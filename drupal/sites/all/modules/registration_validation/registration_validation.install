<?php

/**
 * @file
 * Install, update, and uninstall functions for Registration validation module.
 */

/**
 * Implements hook_requirements().
 */
function registration_validation_requirements($phase) {
  $requirements = array();
  $t = get_t();
  if ($phase == 'runtime') {
    // Show the validation blocked counter on the status report page.
    $requirements['registration_validation_counter'] = array(
      'title' => $t('Registration Validation'),
      'value' => format_plural(
        variable_get('registration_validation_counter', 0),
        '1 blocked registration',
        '@count blocked registrations'
      ),
      'severity' => REQUIREMENT_INFO,
    );
  }
  return $requirements;
}

/**
 * Implements hook_install().
 */
function registration_validation_install() {
  // Save initial settings to the variables table.
  variable_set('registration_validation_blacklisted_domains_message', 'The e-mail domain %domain has been blacklisted from registering. Please enter a different e-mail address.');
  variable_set('registration_validation_blacklisted_usernames_message', 'The username contains %username, which has been blacklisted from being used when registering. Please enter a different username.');

  // Be friendly to your users: what should they to do after install?
  $t = get_t();
  drupal_set_message($t('You can now <a href="/admin/config/people/registration-validation">configure</a> the Registration validation module for your site.'), 'status');

  // Clear all cache for good measure.
  cache_clear_all();
}

/**
 * Implements hook_uninstall().
 */
function registration_validation_uninstall() {
  // Remove our entries from the variable table and clear the variable cache.
  db_delete('variable')
    ->condition('name', "registration_validation_%", "LIKE")
    ->execute();
  cache_clear_all('variables', 'cache');
}
