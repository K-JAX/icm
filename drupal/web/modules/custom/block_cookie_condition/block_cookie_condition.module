<?php 
/**
 * Implementation of 
 */

// Decide if showing block based on cookie
use Drupal\block\Entity\Block;
use Drupal\Core\Access\AccessResult;
use Drupal\Core\Session\AccountInterface;
use Drupal\node\NodeInterface;
use Drupal\Core\Url;



function block_cookie_condition_preprocess_menu(&$variables){
  // $cookie = Session::getCookie('userType');
  // kint($_COOKIE);
  // kint($cookie);
  // if(isset($_COOKIE['userType'])){
  //   kint($_COOKIE['userType']);

  // }
  if(\Drupal::currentUser()->isAnonymous()){
    
  if (isset($variables['menu_name']) && $variables['menu_name'] === 'main') {
    // kint($_COOKIE);

    // foreach($variables['items'] as $key => $item) {
    //   $path = $item['url']->toString();

    //     if(isset($_COOKIE['userType'])){
    //       $userType = $_COOKIE['userType'];
    //       if($userType == 'investor_type'){
    //         if($path == '/services'){
    //           unset($variables['items'][$key]);          
    //         }
    //       }else{
    //         if($path == '/about'){
    //           unset($variables['items'][$key]);          
    //         }
    //       }
    //     }else{
    //       if($path == '/about'){
    //         unset($variables['items'][$key]);
    //       }
    //     }
    //   }

    }
  }

  // foreach ($items as $key => &$item){
  //   kint($item['url']);
  //   // if($item['url']->toString() == '/services'){
      
  //   // }
  // }
}

// Tweaking menu item urls
// function block_cookie_condition_link_alter(&$variables){
//   /**
//    * The URL of the link.
//    *
//    * @var Url
//    */
//   $url = $variables['url'];

//   // Return early where possible.
//   if ($url->isExternal()) {
//     return;
//   }
//   else {
//     $uri = $url->toString();
//     if( $uri == '/services' ) {
//       $variables['text'] = t('@text', ['@text' => 'Dashboard']);
//     }
//     if( $uri == '/about' ){
//       $variables = [];
      
      
//       // if($_COOKIE ===){
        
//         // }
//         // $variables['url'] = Url::fromUserInput('/advisor-services');
//     }
//     if (!isset($_COOKIE)){
//       return;
//     }
//   }
// }

function block_cookie_condition_block_access(Block $block, $operation, AccountInterface $account){
    // Example code that would prevent displaying the 'Powered by Drupal' block in
    // a region different than the footer.
    // kint('testing output from block access');
    // if($operation == 'view' ){
      
    //   if(isset($block->getVisibility()['request_path']['pages'])){
    //     \Drupal::service('page_cache_kill_switch')->trigger();
    //     if(\Drupal::request()->getRequestUri() == $block->getVisibility()['request_path']['pages']){
          
    //       $bvg = $block->getVisibility()['condition_group']['block_visibility_group'] ?? null;
    //       if(isset($bvg) && $bvg !== '' && \Drupal::currentUser()->isAnonymous()){
    //         if(isset($_COOKIE['userType'])){
    //           // kint([$bvg, $_COOKIE['userType'], $bvg == $_COOKIE['userType']]);
    //           return AccessResult::forbiddenIf($bvg != $_COOKIE['userType']);
    //         }else{
    //           // kint($bvg);
    //           return AccessResult::forbiddenIf( $bvg == 'investor_type' );
    //         }
  
    //       }
    //     }

    //   }

    // }
    
    
    // if ($operation == 'view' && $block
    // ->getPluginId() == 'system_powered_by_block') {
		// return AccessResult::forbiddenIf($block
		// 	->getRegion() != 'footer')
		// 	->addCacheableDependency($block);
    // }

    // No opinion.
    return AccessResult::neutral();
}

use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Ajax\AjaxResponse;
use Drupal\Core\Ajax\InvokeCommand;

/**
 * An Ajax callback.
 */

// function block_cookie_condition_ajax_callback(array &$form, FormStateInterface $form_state){
//   $response = new AjaxResponse();
//   $response->addCommand(new InvokeCommand(NULL, 'myAjaxCallback', ['This is the new text!']));
//   return $response;
// }

function getBlockContentByMachineName($machine_name) {
  // Get the block id from machine name.
  $query_result = \Drupal::entityTypeManager()
    ->getStorage('block_content')
    ->getQuery()
    ->condition('machine_name', $machine_name)
    ->range(0, 1)
    ->execute();
  // Get the block id.
  $block_id = reset($query_result);
  if ($block_id) {
    $block = \Drupal\block_content\Entity\BlockContent::load($block_id);
    return $block;
  }
  else {
    return NULL;
  }
}